# -*- coding: utf-8 -*-
#"""dataCapture.ipynb
#
#Automatically generated by Colaboratory.
#
#Original file is located at
#    https://colab.research.google.com/drive/1rvuBbCet39g9QTi_8GA1llw2EBKb-noW
#"""

import os
import time

import cv2
import numpy as np
import pyrealsense2.pyrealsense2 as rs

#from realsense_depth import *



capName = ["Open","Closed","Up","Down","Pointing"] #Create these directories within the DIR path
DIR = "C:\\Users\\DiMaggio\\Desktop\\deep_learning\\new_data_collection" #CHANGE FOR LOCAL SYSTEM
for gesture in capName: # creates gesture folders where images are saved
    save_path = os.path.join(DIR,gesture)
    os.makedirs(save_path,exist_ok=True)
pipeline = rs.pipeline()
config = rs.config()
config.enable_stream(rs.stream.color, 640, 480, rs.format.bgr8, 30)
# config.enable_stream(rs.stream.depth, 640, 480, rs.format.z16, 30)
#config.enable_record_to_file('test.bag')
align = rs.align(rs.stream.color)
pipeline.start(config)
frames = pipeline.wait_for_frames()
frames = align.process(frames)
color_frame = frames.get_color_frame()
# depth_frame = frames.get_depth_frame()
color_image = color_frame.get_data()
# depth_image = depth_frame.get_data()

os.chdir(DIR)
start = time.time()
countBin = 0
countR = 0
cap_idx = 0
cap_length = 35 # total time capturing and saving images. Add 5 extra seconds due to 5 second prep in beginning

while(True):
    frames = pipeline.wait_for_frames()
    frames = align.process(frames)
    color_frame = frames.get_color_frame()
    color_image = np.asanyarray(color_frame.get_data())
    # if cap_idx == 4:    # only save depth when doing pointing gesture
    #     depth_frame = frames.get_depth_frame()
    #     depth_image = np.asanyarray(depth_frame.get_data())
    #ret, depth_frame, frame = dc.get_frame()
    cv2.imshow('frame', color_image)
    
    time_took = round((time.time() - start))
    #print(time_took)
    if time_took == 1:
        print("{} Hand Data Capture starting in 4 seconds".format(capName[cap_idx]))
    if time_took == 3:
        print("{} Hand Data Capture starting in 3 seconds".format(capName[cap_idx]))
    elif time_took == 4:
        print("{} Hand Data Capture starting in 2 seconds".format(capName[cap_idx]))
    elif time_took == 5:
        print("{} Hand Data Capture starting in 1 seconds".format(capName[cap_idx]))
    elif time_took > 5 and time_took < cap_length:
        
        fcount = "{:05n}".format(countR)
        imgName1 = capName[cap_idx] + fcount + '.png'
        # if cap_idx == 4:    # only save depth when doing pointing gesture
        #     imgName2 = "Depth" + fcount + '.png'
        countR += 1
        filename = os.path.join(DIR,capName[cap_idx])
        filename1 = os.path.join(filename,imgName1)
        # if cap_idx == 4:    # only save depth when doing pointing gesture
        #     filename2 = os.path.join(filename,imgName2)
        cv2.imwrite(filename1,color_image)
        # if cap_idx == 4:    # only save depth when doing pointing gesture
        #     depth_image.astype(np.uint16)
        #print(depth_image.dtype)
        #print(depth_image.shape)
        # if cap_idx == 4:    # only save depth when doing pointing gesture
        #     cv2.imwrite(filename2,depth_image)
            # print(depth_image)
        # print(f'Capturing Radial Image {countR}')    
        countR += 1
    elif time_took == cap_length:
        print("All Done, Please get ready for next gesture.")
    elif time_took == cap_length + 5:
        print("Restarting Now")
        cap_idx += 1
        start = time.time()
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
